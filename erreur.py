try:
    from mot_clef import replace
    def add_erreurs(liste_replace:list[replace]) -> list[replace]:
        liste_replace.append(replace("BaseException", "BaseException"))
        liste_replace.append(replace("BaseExceptionGroup", "GroupeBaseException"))
        liste_replace.append(replace("GeneratorExit", "SortieGenerateur"))
        liste_replace.append(replace("KeyboardInterrupt", "InterruptionClavier"))
        liste_replace.append(replace("SystemExit", "SortieSystème"))
        liste_replace.append(replace("Exception", "Exception"))
        liste_replace.append(replace("ArithmeticError", "ErreurArithmetic"))
        liste_replace.append(replace("FloatingPointError", "ErreurVirgule"))
        liste_replace.append(replace("OverflowError", "ErreurDépassementCapacité"))
        liste_replace.append(replace("ZeroDivisionError", "ErreurDivisionZéro"))
        liste_replace.append(replace("AssertionError", "ErreurAssertion"))
        liste_replace.append(replace("AttributeError", "ErreurAttribut"))
        liste_replace.append(replace("BufferError", "ErreurMémoireTampon"))
        liste_replace.append(replace("EOFError", "ErreurFinDeFichier"))
        liste_replace.append(replace("ExceptionGroup", "GroupeException"))
        liste_replace.append(replace("ImportError", "ErreurImportation"))
        liste_replace.append(replace("ModuleNotFoundError", "ErreurModuleNonTrouvé"))
        liste_replace.append(replace("LookupError", "ErreurRegard"))
        liste_replace.append(replace("IndexError", "ErreurIndex"))
        liste_replace.append(replace("KeyError", "ErreurClef"))
        liste_replace.append(replace("NameError", "ErreurNom"))
        liste_replace.append(replace("UnboundLocalError", "ErreurZoneLocaleNonBornée"))
        liste_replace.append(replace("OSError", "ErreurSystèmeOpération"))
        liste_replace.append(replace("BlockingIOError", "ErreurEntréeSortieBloquée"))
        liste_replace.append(replace("ChildProcessError", "ErreurProcéssusEnfant"))
        liste_replace.append(replace("ConnectionError", "ErreurConnection"))
        liste_replace.append(replace("BrokenPipeError", "ErreurTuyauCassé"))
        liste_replace.append(replace("ConnectionAbortedError", "ErreurConnectionAnnulée"))
        liste_replace.append(replace("ConnectionRefusedError", "ErreurConnectionRefusée"))
        liste_replace.append(replace("ConnectionResetError", "ErreurConnectionRéinitialisée"))
        liste_replace.append(replace("FileExistsError", "ErreurFichierExistant"))
        liste_replace.append(replace("FileNotFoundError", "ErreurFichierNonTrouvé"))
        liste_replace.append(replace("InterruptedError", "ErreurInterruption"))
        liste_replace.append(replace("IsADirectoryError", "ErreurEstUnDossier"))
        liste_replace.append(replace("NotADirectoryError", "ErreurNEstPasUnDossier"))
        liste_replace.append(replace("PermissionError", "ErreurPermission"))
        liste_replace.append(replace("ProcessLookupError", "ErreurRegardProcéssus"))
        liste_replace.append(replace("TimeoutError", "ErreurTempsÉcoulé"))
        liste_replace.append(replace("ReferenceError", "ErreurRéférence"))
        liste_replace.append(replace("RuntimeError", "ErreurExécution"))
        liste_replace.append(replace("NotImplementedError", "ErreurNonImplémenté"))
        liste_replace.append(replace("RecursionError", "ErreurRécursion"))
        liste_replace.append(replace("StopAsyncIteration", "ArrêterItérationAsynchronisé"))
        liste_replace.append(replace("StopIteration", "ArrêterItération"))
        liste_replace.append(replace("SyntaxError", "ErreurSyntaxe"))
        liste_replace.append(replace("IndentationError", "ErreurIndentation"))
        liste_replace.append(replace("TabError", "ErreurTabulation"))
        liste_replace.append(replace("SystemError", "ErreurSystème"))
        liste_replace.append(replace("TypeError", "ErreurType"))
        liste_replace.append(replace("ValueError", "ErreurValeur"))
        liste_replace.append(replace("UnicodeError", "ErreurUnicode"))
        liste_replace.append(replace("UnicodeDecodeError", "ErreurUnicodeDécodage"))
        liste_replace.append(replace("UnicodeEncodeError", "ErreurUnicodeEncodage"))
        liste_replace.append(replace("UnicodeTranslateError", "ErreurUnicodeTraduction"))
        liste_replace.append(replace("Warning", "Avertissement"))
        liste_replace.append(replace("BytesWarning", "AvertissementOctets"))
        liste_replace.append(replace("DeprecationWarning", "AvertissementDéprécié"))
        liste_replace.append(replace("EncodingWarning", "AvertissementEncodage"))
        liste_replace.append(replace("FutureWarning", "AvertissementFutur"))
        liste_replace.append(replace("ImportWarning", "AvertissementImportation"))
        liste_replace.append(replace("PendingDeprecationWarning", "AvertissementBientôtDéprécié"))
        liste_replace.append(replace("ResourceWarning", "AvertissementRessources"))
        liste_replace.append(replace("RuntimeWarning", "AvertissementExécution"))
        liste_replace.append(replace("SyntaxWarning", "AvertissementSyntaxe"))
        liste_replace.append(replace("UnicodeWarning", "AvertissementUnicode"))
        liste_replace.append(replace("UserWarning", "AvertissementUtilisateur"))
        liste_replace.append(replace("AddressValueError", "ErreurValeurAdresse"))
        liste_replace.append(replace("AmbiguousOptionError", "ErreurOptionAmbigüe"))
        liste_replace.append(replace("ArgumentError", "ErreurArgument"))
        liste_replace.append(replace("ArgumentTypeError", "ErreurTypeArgument"))
        liste_replace.append(replace("ArithmeticError", "ErreurArithmetique"))
        return liste_replace
except ModuleNotFoundError:
    def add_erreurs(liste_replace:list) -> list:
        import sys
        print("Erreurs non chargées", file=sys.stderr)
        return liste_replace
