try:
    from mot_clef import replace
    def add_méthodes(liste_replace:list[replace]) -> list[replace]:
        #A
        liste_replace.append(replace("__abs__", "__valeur_absolue__"))
        liste_replace.append(replace("__add__", "__addition__"))
        liste_replace.append(replace("__aenter__", "__async_entrée__"))
        liste_replace.append(replace("__aexit__", "__async_sortie__"))
        liste_replace.append(replace("__aiter__", "__async_itération__"))
        liste_replace.append(replace("__all__", "__tout__"))
        liste_replace.append(replace("__and__", "__et__"))
        liste_replace.append(replace("__anext__", "__async_suivant__"))
        liste_replace.append(replace("__annotations__", "__annotations__"))
        liste_replace.append(replace("__args__", "__arguments__"))
        liste_replace.append(replace("__await__", "__attendre__"))
        #B
        liste_replace.append(replace("__bases__", "__bases__"))
        liste_replace.append(replace("__bool__", "__booléen__"))
        liste_replace.append(replace("__breakpointhook__", "__crochet_de_point_d_arrêt__"))
        liste_replace.append(replace("__bytes__", "__octets__"))
        #C
        liste_replace.append(replace("__cached__", "__en_mémoire_cache__"))
        liste_replace.append(replace("__call__", "__appel__"))
        liste_replace.append(replace("__callback__", "__rappel__"))
        liste_replace.append(replace("__cause__", "__cause__"))
        liste_replace.append(replace("__ceil__", "__arrondir_par_excès__"))
        liste_replace.append(replace("__class__", "__classe__"))
        liste_replace.append(replace("__class_getitem__", "__obtenir_item_de_classe__"))
        liste_replace.append(replace("__classcell__", "__cellule_de_classe__"))
        liste_replace.append(replace("__closure__", "__fermeture__"))
        liste_replace.append(replace("__code__", "__code__"))
        liste_replace.append(replace("__complex__", "__complèxe__"))
        liste_replace.append(replace("__concat__", "__concaténation__"))
        liste_replace.append(replace("__contains__", "__contient__"))
        liste_replace.append(replace("__context__", "__contexte__"))
        liste_replace.append(replace("__copy__", "__copie__"))
        #D
        liste_replace.append(replace("__debug__", "__débogage__"))
        liste_replace.append(replace("__deepcopy__", "__copie_profonde__"))
        liste_replace.append(replace("__defaults__", "__défaut__"))
        liste_replace.append(replace("__del__", "__supp__"))
        liste_replace.append(replace("__delattr__", "__supprimer_attribut__"))
        liste_replace.append(replace("__delete__", "__supprimer__"))
        liste_replace.append(replace("__delitem__", "__supprimer_item__"))
        liste_replace.append(replace("__dict__", "__dictionnaire__"))
        liste_replace.append(replace("__dir__", "__dossier__"))
        liste_replace.append(replace("__displayhook__", "__affichage_crochet__"))
        liste_replace.append(replace("__divmod__", "__modulo__"))
        liste_replace.append(replace("__doc__", "__documentation__"))
        #E
        liste_replace.append(replace("__enter__", "__entrer__"))
        liste_replace.append(replace("__eq__", "__égal__"))
        liste_replace.append(replace("__excepthook__", "__rattraper_crochet__"))
        liste_replace.append(replace("__exit__", "__sortie__"))
        #F
        liste_replace.append(replace("TabError", "ErreurTabulation"))
        liste_replace.append(replace("SystemError", "ErreurSystème"))
        liste_replace.append(replace("TypeError", "ErreurType"))
        liste_replace.append(replace("ValueError", "ErreurValeur"))
        liste_replace.append(replace("UnicodeError", "ErreurUnicode"))
        liste_replace.append(replace("UnicodeDecodeError", "ErreurUnicodeDécodage"))
        liste_replace.append(replace("UnicodeEncodeError", "ErreurUnicodeEncodage"))
        liste_replace.append(replace("UnicodeTranslateError", "ErreurUnicodeTraduction"))
        liste_replace.append(replace("Warning", "Avertissement"))
        liste_replace.append(replace("BytesWarning", "AvertissementOctets"))
        liste_replace.append(replace("DeprecationWarning", "AvertissementDéprécié"))
        liste_replace.append(replace("EncodingWarning", "AvertissementEncodage"))
        liste_replace.append(replace("FutureWarning", "AvertissementFutur"))
        liste_replace.append(replace("ImportWarning", "AvertissementImportation"))
        liste_replace.append(replace("PendingDeprecationWarning", "AvertissementBientôtDéprécié"))
        liste_replace.append(replace("ResourceWarning", "AvertissementRessources"))
        liste_replace.append(replace("RuntimeWarning", "AvertissementExécution"))
        liste_replace.append(replace("SyntaxWarning", "AvertissementSyntaxe"))
        liste_replace.append(replace("UnicodeWarning", "AvertissementUnicode"))
        liste_replace.append(replace("UserWarning", "AvertissementUtilisateur"))
        return liste_replace
except ModuleNotFoundError:
    def add_types(liste_replace:list) -> list:
        import sys
        print("Erreurs non chargées", file=sys.stderr)
        return liste_replace
