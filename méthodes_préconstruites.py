try:
    from mot_clef import replace
    def add_méthodes(liste_replace:list[replace]) -> list[replace]:
        #A
        liste_replace.append(replace("__abs__", "__valeur_absolue__"))
        liste_replace.append(replace("__add__", "__addition__"))
        liste_replace.append(replace("__aenter__", "__async_entrée__"))
        liste_replace.append(replace("__aexit__", "__async_sortie__"))
        liste_replace.append(replace("__aiter__", "__async_itération__"))
        liste_replace.append(replace("__all__", "__tout__"))
        liste_replace.append(replace("__and__", "__et__"))
        liste_replace.append(replace("__anext__", "__async_suivant__"))
        liste_replace.append(replace("__annotations__", "__annotations__"))
        liste_replace.append(replace("__args__", "__arguments__"))
        liste_replace.append(replace("__await__", "__attendre__"))
        #B
        liste_replace.append(replace("__bases__", "__bases__"))
        liste_replace.append(replace("__bool__", "__booléen__"))
        liste_replace.append(replace("__breakpointhook__", "__crochet_de_point_d_arrêt__"))
        liste_replace.append(replace("__bytes__", "__octets__"))
        #C
        liste_replace.append(replace("__cached__", "__en_mémoire_cache__"))
        liste_replace.append(replace("__call__", "__appel__"))
        liste_replace.append(replace("__callback__", "__rappel__"))
        liste_replace.append(replace("__cause__", "__cause__"))
        liste_replace.append(replace("__ceil__", "__arrondir_par_excès__"))
        liste_replace.append(replace("__class__", "__classe__"))
        liste_replace.append(replace("__class_getitem__", "__obtenir_item_de_classe__"))
        liste_replace.append(replace("__classcell__", "__cellule_de_classe__"))
        liste_replace.append(replace("__closure__", "__fermeture__"))
        liste_replace.append(replace("__code__", "__code__"))
        liste_replace.append(replace("__complex__", "__complèxe__"))
        liste_replace.append(replace("__concat__", "__concaténation__"))
        liste_replace.append(replace("__contains__", "__contient__"))
        liste_replace.append(replace("__context__", "__contexte__"))
        liste_replace.append(replace("__copy__", "__copie__"))
        #D
        liste_replace.append(replace("__debug__", "__débogage__"))
        liste_replace.append(replace("__deepcopy__", "__copie_profonde__"))
        liste_replace.append(replace("__defaults__", "__défaut__"))
        liste_replace.append(replace("__del__", "__supp__"))
        liste_replace.append(replace("__delattr__", "__supprimer_attribut__"))
        liste_replace.append(replace("__delete__", "__supprimer__"))
        liste_replace.append(replace("__delitem__", "__supprimer_item__"))
        liste_replace.append(replace("__dict__", "__dictionnaire__"))
        liste_replace.append(replace("__dir__", "__dossier__"))
        liste_replace.append(replace("__displayhook__", "__affichage_crochet__"))
        liste_replace.append(replace("__divmod__", "__modulo__"))
        liste_replace.append(replace("__doc__", "__documentation__"))
        #E
        liste_replace.append(replace("__enter__", "__entrer__"))
        liste_replace.append(replace("__eq__", "__égal__"))
        liste_replace.append(replace("__excepthook__", "__rattraper_crochet__"))
        liste_replace.append(replace("__exit__", "__sortie__"))
        #F
        liste_replace.append(replace("__file__", "__fichier__"))
        liste_replace.append(replace("__float__", "__flottant__"))
        liste_replace.append(replace("__floor__", "__arrondir_par_défaut__"))
        liste_replace.append(replace("__floordiv__", "__division_euclidienne__"))
        liste_replace.append(replace("__format__", "__format__"))
        liste_replace.append(replace("__fspath__", "__chemin_fichiers_système__"))
        liste_replace.append(replace("__func__", "__fonction__"))
        liste_replace.append(replace("__future__", "__future__"))
        #G
        liste_replace.append(replace("_ge__", "__plus_grand_ou_égal__"))
        liste_replace.append(replace("__get__", "__obtenir__"))
        liste_replace.append(replace("__getattr__", "__obtenir_attribut_nommé__"))
        liste_replace.append(replace("__getattribute__", "__obtenir_attribut__"))
        liste_replace.append(replace("__getitem__", "__obtenir_item__"))
        liste_replace.append(replace("__getnewargs__", "__obtenir_nouveaux_arguments__arguments_non_positionnels_exclus__"))
        liste_replace.append(replace("__getnewargs_ex__", "__obtenir_nouveaux_arguments_arguments_non_positionnels_inclus__"))
        liste_replace.append(replace("__getstate__", "__obtenir_état__"))
        liste_replace.append(replace("__globals__", "__globales__"))
        liste_replace.append(replace("__gt__", "__strictement_plus_grand__"))
        #H
        liste_replace.append(replace("__hash__", "__découpage__"))
        #I
        liste_replace.append(replace("__iadd__", "__addition_sur_place__"))
        liste_replace.append(replace("__iand__", "__et_sur_place__"))
        liste_replace.append(replace("__iconcat__", "__concaténation_sur_place__"))
        liste_replace.append(replace("__ifloordir__", "__division_euclidienne_sur_place__"))
        liste_replace.append(replace("__ilshift__", "__décalage_vers_la_gauche_sur_place__"))
        liste_replace.append(replace("__imatmul__", "__matrice_multiplication_sur_place__"))
        liste_replace.append(replace("__imod__", "__modulo_sur_place__"))
        liste_replace.append(replace("__import__", "__importation__"))
        liste_replace.append(replace("__imul__", "__multiplication_sur_place__"))
        liste_replace.append(replace("__index__", "__index__"))
        liste_replace.append(replace("__init__", "__initialisation__"))
        liste_replace.append(replace("__init_subclass__", "__initialisation_sous_classe__"))
        liste_replace.append(replace("__instancecheck__", "__vérification_instance__"))
        liste_replace.append(replace("__int__", "__entier__"))
        liste_replace.append(replace("__interactivehook__", "__crochet_intéractif__"))
        liste_replace.append(replace("__inv__", "__inv__"))
        liste_replace.append(replace("__invert__", "__inverser__"))
        liste_replace.append(replace("__ior__", "__ou_sur_place__"))
        liste_replace.append(replace("__ipow__", "__puissance_sur_place__"))
        liste_replace.append(replace("__irshift__", "__décalage_vers_la_droite_sur_place__"))
        liste_replace.append(replace("__isub__", "__soustraction_sur_place__"))
        liste_replace.append(replace("__iter__", "__itération__"))
        liste_replace.append(replace("__itruediv__", "__vraie_division_sur_place__"))
        liste_replace.append(replace("__ixor__", "__xou_sur_place__"))
        #K
        liste_replace.append(replace("__kwdefaults__", "__dictionnaire_paramètre_mot_clef__"))
        #L
        liste_replace.append(replace("NotDone", "AvertissementUtilmlisateur"))
        return liste_replace
except ModuleNotFoundError:
    def add_types(liste_replace:list) -> list:
        import sys
        print("Erreurs non chargées", file=sys.stderr)
        return liste_replace
